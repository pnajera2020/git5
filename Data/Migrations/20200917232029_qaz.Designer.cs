// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(ApiDBContext))]
    [Migration("20200917232029_qaz")]
    partial class qaz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Data.CtCategoria", b =>
                {
                    b.Property<long>("PKIdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_categoria")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("b_Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("ds_descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdCategoria");

                    b.ToTable("cat_categoria");
                });

            modelBuilder.Entity("Data.CtMarca", b =>
                {
                    b.Property<long>("PKIdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_marca")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("b_activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("ds_descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdMarca");

                    b.ToTable("cat_marca");
                });

            modelBuilder.Entity("Data.CtProducto", b =>
                {
                    b.Property<long>("PKIdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_producto")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("b_activo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Costo")
                        .HasColumnName("f_costo")
                        .HasColumnType("numeric");

                    b.Property<string>("Descripcion")
                        .HasColumnName("ds_descripcion")
                        .HasColumnType("text");

                    b.Property<long>("FKIdCategoria")
                        .HasColumnName("id_categoria")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdMarca")
                        .HasColumnName("id_marca")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdProveedor")
                        .HasColumnName("id_proveedor")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdUnidadMedida")
                        .HasColumnName("id_unidad_medida")
                        .HasColumnType("bigint");

                    b.Property<string>("Imagen")
                        .HasColumnName("ds_imagen")
                        .HasColumnType("text");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnName("f_precio_venta")
                        .HasColumnType("numeric");

                    b.Property<string>("SKU")
                        .HasColumnName("ds_sku")
                        .HasColumnType("text");

                    b.HasKey("PKIdProducto");

                    b.HasIndex("FKIdCategoria");

                    b.HasIndex("FKIdMarca");

                    b.HasIndex("FKIdProveedor");

                    b.HasIndex("FKIdUnidadMedida");

                    b.ToTable("tb_producto");
                });

            modelBuilder.Entity("Data.CtProveedor", b =>
                {
                    b.Property<long>("PKIdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_proveedor")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("b_activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("ds_descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdProveedor");

                    b.ToTable("cat_proveedor");
                });

            modelBuilder.Entity("Data.CtUnidadMedida", b =>
                {
                    b.Property<long>("PKIdUnidadMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_unidad_medida")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("b_activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("ds_descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdUnidadMedida");

                    b.ToTable("cat_unidad_medida");
                });

            modelBuilder.Entity("Data.CtProducto", b =>
                {
                    b.HasOne("Data.CtCategoria", "FKIdCategoriaNavigation")
                        .WithMany("CtProducto")
                        .HasForeignKey("FKIdCategoria")
                        .HasConstraintName("fk_cat_categoria_id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.CtMarca", "FKIdMarcaNavigation")
                        .WithMany("CtProducto")
                        .HasForeignKey("FKIdMarca")
                        .HasConstraintName("fk_cat_marca_id_marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.CtProveedor", "FKIdProveedorNavigation")
                        .WithMany("CtProducto")
                        .HasForeignKey("FKIdProveedor")
                        .HasConstraintName("fk_cat_proveedor_id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.CtUnidadMedida", "FKIdUnidadMedidaNavigation")
                        .WithMany("CtProducto")
                        .HasForeignKey("FKIdUnidadMedida")
                        .HasConstraintName("fk_cat_unidad_medida_id_unidad_medida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
